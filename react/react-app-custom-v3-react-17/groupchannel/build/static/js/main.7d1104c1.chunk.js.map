{"version":3,"sources":["components/Main/index.js","pages/Home/index.js","config/const.js","components/CustomizedApp/index.js","pages/QuickStart/index.js","pages/CustomCreateChannel/index.js","pages/CustomChannelList/index.js","pages/CustomChannelList2/index.js","pages/CustomGroupChannel/stlye.jsx","pages/CustomGroupChannel/index.js","pages/CustomSettingChannel/index.js","pages/CustomEditProfile/index.js","pages/CustomOpenChannel/index.js","pages/CustomCall/index.js","components/LoginForm/index.js","pages/CustomDirectCall/index.js","components/Header/style.jsx","components/Header/index.js","pages/CustomChatWithCall/index.js","App.js","index.js"],"names":["Main","react_default","a","createElement","Fragment","Home","components_Main","APP_ID","USER_ID","NICKNAME","withSendBird","props","console","log","_props$stores","stores","sdkStore","userStore","_props$config","config","isOnline","userId","appId","accessToken","theme","userListQuery","logger","pubSub","useCallback","initialized","sdk","loading","error","user","logDefaultProps","_useState","useState","_useState2","Object","slicedToArray","showSettings","setShowSettings","_useState3","_useState4","currentChannelUrl","setCurrentChannelUrl","className","ChannelList","onChannelSelect","channel","url","Channel","channelUrl","onChatHeaderActionClick","style","position","top","right","ChannelSettings","onCloseClick","QuickStart","SendbirdProvider","nickname","components_CustomizedApp","InfoRenderer","_ref","info","channelType","members","map","member","key","marginRight","border","padding","CustomCreateChannel","onCreate","setOnCreate","setInfo","type","onClick","CreateChannel","onCreateChannel","res","onCancel","CustomCreateChannel_InfoRenderer","CustomChannelList","CustomChannelList2","context","ChannelListUI","CustomChannelHeaderContainer","styled","div","_templateObject","taggedTemplateLiteral","CustomChannelHeader","setOnSearch","setOnEdit","CustomGroupChannel","selectedChannel","setSelectedChannel","onSearch","_useState5","_useState6","onEdit","display","height","flex","allowProfileEdit","onProfileEditSuccess","renderChannelHeader","CustomGroupChannel_CustomChannelHeader","showSearchIcon","onSearchClick","MessageSearch","onResultClick","CustomSettingChannel","onSetting","setOnSetting","CustomEditProfile","EditUserProfile","CustomOpenChannel","width","OpenChannel","renderHeader","OpenChannelSettings","CustomCall","done","setDone","roomState","setRoomState","room","setRoom","_useState7","_useState8","setChannel","authOption","roomParams","roomType","SendBirdCall","RoomType","LARGE_ROOM_FOR_AUDIO_ONLY","connectCall","init","authenticate","result","then","connectWebSocket","catch","e","createRoom","moderator","createdBy","roomId","state","_ctx","finally","disconnectCall","fetchRoomById","exit","useEffect","enter","audioEnabled","margin","textAlign","marginTop","value","placeholder","onChange","target","role","aria-label","fontSize","LoginForm","caller","setCaller","setLoginDone","isChat","sendBirdAuth","onSubmit","preventDefault","CustomForm","form","LoginForm_templateObject","CustomDirectCall","callee","setCallee","localCallee","setLocalCallee","loginDone","_useState9","_useState10","isCall","setIsCall","call","dialParams","isVideoCall","callOption","localMediaView","document","getElementById","remoteMediaView","videoEnabled","dial","onEstablished","onConnected","onEnded","onRemoteAudioSettingsChanged","onRemoteVideoSettingsChanged","end","acceptCall","_caller","acceptParams","accept","addListener","onRinging","removeListener","justifyContent","flexDirection","id","autoPlay","components_LoginForm","HeaderWrap","ul","style_templateObject","Header","react_router_dom","to","CustomChatWithCall","callDone","setCallDone","callView","getInstance","setCall","render","setRinging","App","components_Header","react_router","path","element","pages_Home","pages_CustomCreateChannel","pages_CustomChannelList","pages_CustomChannelList2","pages_CustomGroupChannel","pages_CustomOpenChannel","pages_CustomSettingChannel","pages_CustomEditProfile","pages_CustomCall","pages_CustomDirectCall","pages_CustomChatWithCall","rootElement","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.7d1104c1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Main = () => (\n  <>\n    <h1>Main 페이지입니다</h1>\n  </>\n);\n\nexport default Main;\n","import React from 'react';\nimport Main from '../../components/Main';\n\nconst Home = () => {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n};\n\nexport default Home;\n","export const APP_ID = 'ABD4B8EB-4479-4478-9C51-D41B009C6780';\nexport const USER_ID = 'junhee';\nexport const NICKNAME = 'junhee';\n\nexport default {\n  APP_ID,\n  USER_ID,\n  NICKNAME,\n};\n","import React, { useState, useCallback } from 'react';\n\nimport Channel from '@sendbird/uikit-react/Channel';\nimport ChannelList from '@sendbird/uikit-react/ChannelList';\nimport ChannelSettings from '@sendbird/uikit-react/ChannelSettings';\nimport withSendBird from '@sendbird/uikit-react/withSendBird';\n\nfunction CustomizedApp(props) {\n  props && console.log('🔥 props changed: ', props);\n  // default props\n  const {\n    stores: { sdkStore, userStore },\n    config: {\n      isOnline,\n      userId,\n      appId,\n      accessToken,\n      theme,\n      userListQuery,\n      logger,\n      pubSub,\n    },\n  } = props;\n  const logDefaultProps = useCallback(() => {\n    console.log(\n      'SDK store list log',\n      sdkStore.initialized,\n      sdkStore.sdk,\n      sdkStore.loading,\n      sdkStore.error,\n    );\n    console.log(\n      'User store list log',\n      userStore.initialized,\n      userStore.user,\n      userStore.loading,\n    );\n    console.log(\n      'Config list log',\n      isOnline,\n      userId,\n      appId,\n      accessToken,\n      theme,\n      userListQuery,\n      logger,\n      pubSub,\n    );\n  }, [\n    sdkStore.initialized,\n    sdkStore.sdk,\n    sdkStore.loading,\n    sdkStore.error,\n    userStore.initialized,\n    userStore.user,\n    userStore.loading,\n    isOnline,\n    userId,\n    appId,\n    accessToken,\n    theme,\n    userListQuery,\n    logger,\n    pubSub,\n  ]);\n  logDefaultProps();\n\n  // useState\n  const [showSettings, setShowSettings] = useState(false);\n  const [currentChannelUrl, setCurrentChannelUrl] = useState('');\n\n  return (\n    <div className=\"customized-app\">\n      <div className=\"sendbird-app__wrap\">\n        <div className=\"sendbird-app__channellist-wrap\">\n          <ChannelList\n            onChannelSelect={(channel) => {\n              if (channel && channel.url) {\n                setCurrentChannelUrl(channel.url);\n              }\n            }}\n          />\n        </div>\n        <div className=\"sendbird-app__conversation-wrap\">\n          <Channel\n            channelUrl={currentChannelUrl}\n            onChatHeaderActionClick={() => {\n              setShowSettings(true);\n            }}\n          />\n        </div>\n      </div>\n      {showSettings && (\n        <div\n          className=\"sendbird-app__settingspanel-wrap\"\n          style={{ position: 'absolute', top: '52px', right: 0 }}\n        >\n          <ChannelSettings\n            channelUrl={currentChannelUrl}\n            onCloseClick={() => {\n              setShowSettings(false);\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default withSendBird(CustomizedApp);\n","import React from 'react';\nimport SendBirdProvider from '@sendbird/uikit-react/SendbirdProvider';\nimport '@sendbird/uikit-react/dist/index.css';\n\nimport './styles.css';\n\nimport { APP_ID, USER_ID, NICKNAME } from '../../config/const';\nimport CustomizedApp from '../../components/CustomizedApp';\n\nexport default function QuickStart() {\n  if (!APP_ID) {\n    return <p>Set APP_ID in const.js</p>;\n  }\n  return (\n    <SendBirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n      <CustomizedApp />\n    </SendBirdProvider>\n  );\n}\n","import React from 'react';\n\nimport SendbirdProvider from '@sendbird/uikit-react/SendbirdProvider';\nimport CreateChannel from '@sendbird/uikit-react/CreateChannel';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\nimport { useState } from 'react';\n\nconst CustomCreateChannel = () => {\n  const [onCreate, setOnCreate] = useState(false);\n  const [info, setInfo] = useState();\n\n  const onCreateChannel = (res) => {\n    console.log('res: ', res);\n    if (res.url) {\n      setInfo({\n        url: res.url,\n        members: res.members,\n        channelType: res.channelType,\n      });\n    }\n  };\n  return (\n    <div>\n      <h1>Create Channel</h1>\n      <SendbirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n        <div className=\"create_channel_wrap\">\n          <button type=\"button\" onClick={() => setOnCreate(true)}>\n            create_channel\n          </button>\n\n          {onCreate && (\n            <CreateChannel\n              onCreateChannel={onCreateChannel}\n              onCancel={() => setOnCreate(false)}\n            />\n          )}\n\n          {info ? <InfoRenderer info={info} /> : null}\n        </div>\n      </SendbirdProvider>\n    </div>\n  );\n};\n\nconst InfoRenderer = ({ info }) => (\n  <>\n    <p>url : {info.url}</p>\n    <p>channel type : {info.channelType}</p>\n    <p>\n      members:{' '}\n      {info.members.map((member, key) => (\n        <span\n          key={key}\n          style={{\n            marginRight: '1%',\n            border: '1px solid black',\n            padding: '0.5%',\n          }}\n        >\n          {member.nickname}\n        </span>\n      ))}\n    </p>\n  </>\n);\n\nexport default CustomCreateChannel;\n\n/**\n * members: Array(2)\n0: r {nickname: 'miyeon', plainProfileUrl: '', userId: 'miyeon', connectionStatus: 'offline', lastSeenAt: 1650848334764, …}\n1: r {nickname: 'junhee', plainProfileUrl: '', userId: 'junhee', connectionStatus: 'online', lastSeenAt: 0, …}\n */\n","import React from 'react';\n\nimport ChannelList from '@sendbird/uikit-react/ChannelList';\nimport SendBirdProvider from '@sendbird/uikit-react/SendbirdProvider';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\n\nconst CustomChannelList = () => (\n  <div>\n    <h1>ChannelList</h1>\n    <SendBirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n      <div className=\"channel_list_wrap\">\n        <ChannelList />\n      </div>\n    </SendBirdProvider>\n  </div>\n);\n\nexport default CustomChannelList;\n\n/**\n * Provider 를 통해 감싸야 appId와 같은 고유 값을 통해 다른 기능을 사용할 수 있다\n *\n * ChannelList 를 사용할 경우 내부 코드 상으로 ChannelListProvider와 ChannelListUI 가 들어있다\n *\n * 비교를 위해서 CustomChannelList2 폴더를 만들어 놓음\n */\n","import React from 'react';\n\nimport SendBirdProvider from '@sendbird/uikit-react/SendbirdProvider';\n\nimport { ChannelListProvider } from '@sendbird/uikit-react/ChannelList/context';\nimport ChannelListUI from '@sendbird/uikit-react/ChannelList/components/ChannelListUI';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\n\nconst CustomChannelList2 = () => (\n  <div>\n    <h1>ChannelList</h1>\n    <SendBirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n      <div className=\"channel_list_wrap\">\n        <ChannelListProvider>\n          <ChannelListUI />\n        </ChannelListProvider>\n      </div>\n    </SendBirdProvider>\n  </div>\n);\n\nexport default CustomChannelList2;\n\n/**\n * Provider 를 통해 감싸야 appId와 같은 고유 값을 통해 다른 기능을 사용할 수 있다.\n *\n * ChannelList 를 사용할 경우 내부 코드 상으로 ChannelListProvider와 ChannelListUI 가 들어있다\n *\n *\n */\n","import styled from 'styled-components';\n\nexport const CustomChannelHeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: end;\n\n  button {\n    margin-left: 1%;\n    background-color: #fff;\n    border-radius: 10px;\n  }\n`;\n","import React, { useState } from 'react';\nimport Channel from '@sendbird/uikit-react/Channel';\nimport ChannelList from '@sendbird/uikit-react/ChannelList';\nimport MessageSearchPannel from '@sendbird/uikit-react/MessageSearch';\nimport SendBirdProvider from '@sendbird/uikit-react/SendbirdProvider';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\nimport ChannelSettings from '@sendbird/uikit-react/ChannelSettings';\n\nimport { CustomChannelHeaderContainer } from './stlye';\n\nconst CustomGroupChannel = () => {\n  const [selectedChannel, setSelectedChannel] = useState('');\n  const [onSearch, setOnSearch] = useState(false);\n  const [onEdit, setOnEdit] = useState(false);\n\n  const onChannelSelect = (res) => {\n    if (res) {\n      setSelectedChannel(res.url);\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      <h1>Custom Group Channel</h1>\n      <div style={{ display: 'flex', height: '88vh' }}>\n        <SendBirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n          <div className=\"channel_list_wrap\" style={{ flex: 1 }}>\n            <ChannelList\n              onChannelSelect={onChannelSelect}\n              allowProfileEdit={true}\n              onProfileEditSuccess={(res) => console.log('res: ', res)}\n            />\n          </div>\n          <div className=\"channel_wrap\" style={{ flex: 3 }}>\n            <Channel\n              renderChannelHeader={() => (\n                <CustomChannelHeader\n                  setOnSearch={setOnSearch}\n                  setOnEdit={setOnEdit}\n                />\n              )}\n              channelUrl={selectedChannel || ''}\n              showSearchIcon={true}\n              onSearchClick={() => setOnSearch(true)}\n            />\n          </div>\n          {onSearch && (\n            <div className=\"search_wrap\">\n              <MessageSearchPannel\n                channelUrl={selectedChannel || ''}\n                onResultClick={(res) => console.log('res: ', res)}\n                onCloseClick={() => setOnSearch(false)}\n              />\n            </div>\n          )}\n          {onEdit && (\n            <div className=\"edit_wrap\">\n              <ChannelSettings\n                channelUrl={selectedChannel || ''}\n                onCloseClick={() => setOnEdit(false)}\n              />\n            </div>\n          )}\n        </SendBirdProvider>\n      </div>\n    </div>\n  );\n};\n\n// custom renderChannelHeader\nconst CustomChannelHeader = ({ setOnSearch, setOnEdit }) => (\n  <CustomChannelHeaderContainer>\n    <button type=\"button\" onClick={() => setOnSearch(true)}>\n      search\n    </button>\n    <button type=\"button\" onClick={() => setOnEdit(true)}>\n      Edit\n    </button>\n  </CustomChannelHeaderContainer>\n);\n\nexport default CustomGroupChannel;\n\n/**\n * Channel 컴포넌트 내부의 검색 svg에 접근할 때, 해당 컴포넌트로 접근하는 것이 아닌 최상위 컴포넌트인 Channel에 존재하는 props를 바탕으로 연결한다\n * 따라서 세부적인 기능 추가 또는 변경이 있을 경우, 먼저 제공되는 API를 확인하고 없을 경우에 smart components로 넘어가는 방향을 생각해봐야 할 것이다\n */\n","import React, { useState } from 'react';\n\nimport ChannelSettings from '@sendbird/uikit-react/ChannelSettings';\nimport SendbirdProvider from '@sendbird/uikit-react/SendbirdProvider';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\n\nconst CustomSettingChannel = () => {\n  const [onSetting, setOnSetting] = useState(false);\n\n  return (\n    <div>\n      <h1>CustomSettingChannel</h1>\n      <SendbirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n        <div className=\"setting_channel_wrap\">\n          <button type=\"button\" onClick={() => setOnSetting(true)}>\n            setting_channel\n          </button>\n\n          {onSetting && (\n            <div>\n              <ChannelSettings\n                channelUrl={\n                  'sendbird_group_channel_71230636_1df4a19deba53fd770774205b7b9db1673edb8ad'\n                }\n                onCloseClick={() => setOnSetting(false)}\n              />\n            </div>\n          )}\n        </div>\n      </SendbirdProvider>\n    </div>\n  );\n};\n\nexport default CustomSettingChannel;\n","import React, { useState } from 'react';\n\nimport EditUserProfile from '@sendbird/uikit-react/EditUserProfile';\nimport SendbirdProvider from '@sendbird/uikit-react/SendbirdProvider';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\n\nconst CustomEditProfile = () => {\n  const [onSetting, setOnSetting] = useState(false);\n\n  return (\n    <div>\n      <h1>CustomEditProfile</h1>\n      <SendbirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n        <div className=\"setting_channel_wrap\">\n          <button type=\"button\" onClick={() => setOnSetting(true)}>\n            edits_profile\n          </button>\n\n          {onSetting && (\n            <div>\n              <EditUserProfile\n                channelUrl={\n                  'sendbird_group_channel_71230636_1df4a19deba53fd770774205b7b9db1673edb8ad'\n                }\n                onCloseClick={() => setOnSetting(false)}\n              />\n            </div>\n          )}\n        </div>\n      </SendbirdProvider>\n    </div>\n  );\n};\n\nexport default CustomEditProfile;\n","import React, { useState } from 'react';\nimport SendbirdProvider from '@sendbird/uikit-react/SendbirdProvider';\n\nimport OpenChannel from '@sendbird/uikit-react/OpenChannel';\nimport OpenChannelSettings from '@sendbird/uikit-react/OpenChannelSettings';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\n\nconst CustomOpenChannel = () => {\n  const [onEdit, setOnEdit] = useState(false);\n  return (\n    <div>\n      <h1>CustomOpenChannel</h1>\n      <div style={{ display: 'flex' }}>\n        <SendbirdProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME}>\n          <div className=\"open_channel_wrap\" style={{ width: '80%' }}>\n            <OpenChannel\n              channelUrl=\"sendbird_open_channel_5421_28b188dfdb108b82d19df42785fa7f9d3179de71\"\n              renderHeader={() => (\n                <div>\n                  <button type=\"button\" onClick={() => setOnEdit(true)}>\n                    Edit channel\n                  </button>\n                </div>\n              )}\n            />\n          </div>\n          {onEdit && (\n            <div className=\"open_channel_edit_wrap\">\n              <OpenChannelSettings\n                channelUrl=\"sendbird_open_channel_5421_28b188dfdb108b82d19df42785fa7f9d3179de71\"\n                onCloseClick={() => setOnEdit(false)}\n              />\n            </div>\n          )}\n        </SendbirdProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomOpenChannel;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport SendBirdCall from 'sendbird-calls';\n\nimport { APP_ID, NICKNAME, USER_ID } from '../../config/const';\n\nconst CustomCall = () => {\n  const [done, setDone] = useState(false);\n  const [roomState, setRoomState] = useState(false);\n  const [room, setRoom] = useState();\n\n  // for callee\n  const [channel, setChannel] = useState('aacced-as10dc-03dce1b');\n\n  const authOption = { userId: USER_ID, accessToken: NICKNAME };\n  const roomParams = {\n    roomType: SendBirdCall.RoomType.LARGE_ROOM_FOR_AUDIO_ONLY,\n  };\n\n  const connectCall = useCallback(() => {\n    if (authOption && roomParams && !done) {\n      SendBirdCall.init(APP_ID);\n      setDone(true);\n\n      // 유저 정보 확인\n      SendBirdCall.authenticate(authOption, (result, error) => {\n        if (error) {\n          console.log('error authenticating');\n        } else {\n          console.log('success authenticating');\n        }\n      })\n        // 웹 소켓 연결\n        .then(() => {\n          SendBirdCall.connectWebSocket()\n            .then(() => {\n              console.log('Succeeded to connect');\n            })\n            .catch((e) => {\n              console.log('Failed to connect', e);\n            });\n        })\n        // 방 만들기\n        .then(() => {\n          SendBirdCall.createRoom(roomParams)\n            .then((room) => {\n              console.log('room created', room);\n              setRoom({\n                moderator: room.createdBy,\n                roomId: room.roomId,\n                roomType: room.roomType,\n                state: room.state,\n                _ctx: room._ctx,\n              });\n              setRoomState(true);\n            })\n            .catch((e) => {\n              console.log('Failed to create room', e);\n            })\n            .finally(() => {\n              console.log('Room processing complete');\n            });\n        });\n    }\n  }, [authOption, roomParams, done]);\n\n  const disconnectCall = useCallback(() => {\n    if (roomState) {\n      SendBirdCall.fetchRoomById(room.roomId)\n        .then((room) => {\n          room.exit();\n          setRoomState(false);\n          setDone(false);\n\n          console.log('disconnect done 🔥');\n        })\n        .catch((e) => console.log('Failed to disconnect', e));\n    } else {\n      console.log('check the roomState');\n      return;\n    }\n  }, [roomState, room]);\n\n  useEffect(() => {\n    if (roomState) {\n      console.log('room', room);\n\n      SendBirdCall.fetchRoomById(room.roomId)\n        .then((room) => {\n          console.log('fetch room success', room);\n\n          // enter 메서드를 사용하기 위해 꼭 필요한 부분\n          const enterParams = {\n            audioEnabled: true,\n          };\n\n          room\n            .enter(enterParams)\n            .then(() => {\n              console.log('User has successfully enter room');\n            })\n            .catch((e) => {\n              console.log('Failed to enter room', e);\n            });\n        })\n        .catch((e) => {\n          console.log('fetch room error', e);\n        });\n    }\n  }, [roomState, room]);\n\n  return (\n    <div>\n      <h1>Custom Call</h1>\n      <div\n        style={{\n          margin: '0 auto',\n          width: '100%',\n          textAlign: 'center',\n          marginTop: '5%',\n        }}\n      >\n        <div>\n          <div>\n            <span style={{ marginRight: '1%' }}>connect channel :</span>\n            <input\n              style={{ width: '25%', padding: '0.5%' }}\n              type=\"text\"\n              value={channel}\n              placeholder=\"connect channel that you know\"\n              onChange={(e) => setChannel(e.target.value)}\n            />\n          </div>\n          <div style={{ marginTop: '1%' }}>\n            <button\n              type=\"button\"\n              onClick={connectCall}\n              style={{ marginRight: '1%' }}\n            >\n              connect call\n            </button>\n            <button type=\"button\" onClick={disconnectCall}>\n              disconnect call\n            </button>\n          </div>\n        </div>\n        <div style={{ marginTop: '1%' }}>\n          <span\n            role=\"img\"\n            aria-label={roomState ? 'connect' : 'disconnect'}\n            style={{ fontSize: '3rem' }}\n          >\n            {roomState ? '🎧' : '❌'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CustomCall;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport { APP_ID } from '../../config/const';\n\nconst LoginForm = ({\n  caller,\n  setCaller,\n  setLoginDone,\n  SendBirdCall,\n  isChat,\n}) => {\n  const sendBirdAuth = useCallback(() => {\n    SendBirdCall.init(APP_ID);\n\n    SendBirdCall.authenticate({ userId: caller }, (result, error) => {\n      if (error) {\n        console.log('error authenticating', error);\n      } else {\n        console.log('success authenticating', result);\n      }\n    }).then(() => {\n      SendBirdCall.connectWebSocket()\n        .then(() => {\n          console.log('connectWebSocket success');\n          setLoginDone(true);\n        })\n        .catch((error) => console.log('connectWebSocket error', error));\n    });\n\n    if (isChat) {\n    }\n  }, [caller, SendBirdCall, setLoginDone, isChat]);\n\n  const onSubmit = useCallback(\n    (e) => {\n      if (SendBirdCall) {\n        e.preventDefault();\n        sendBirdAuth();\n      } else {\n        console.log('doesnt exist');\n      }\n    },\n    [SendBirdCall, sendBirdAuth],\n  );\n\n  return (\n    <CustomForm onSubmit={onSubmit}>\n      <div>\n        <span>name:</span>\n        <input\n          type=\"text\"\n          value={caller}\n          placeholder=\"write yout name\"\n          onChange={(e) => setCaller(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">login</button>\n      </div>\n    </CustomForm>\n  );\n};\n\nexport default LoginForm;\n\nconst CustomForm = styled.form`\n  padding: 1%;\n  border: 1px solid black;\n  width: 30%;\n  margin: 0 auto;\n\n  div {\n    text-align: center;\n  }\n\n  span {\n    margin-right: 5%;\n  }\n\n  button {\n    margin-top: 5%;\n    text-align: center;\n  }\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport SendBirdCall from 'sendbird-calls';\n\nimport LoginForm from '../../components/LoginForm';\n\nconst CustomDirectCall = () => {\n  const [caller, setCaller] = useState('');\n  const [callee, setCallee] = useState('');\n\n  const [localCallee, setLocalCallee] = useState('');\n\n  const [loginDone, setLoginDone] = useState(false);\n  const [isCall, setIsCall] = useState(false);\n\n  // Todo: callee: 전화받는 사람의 입장에서의 로직 흐름 제어가 원활하지 않다\n\n  // 전화 걸기\n  const call = useCallback(() => {\n    if (callee) {\n      const dialParams = {\n        userId: callee,\n        isVideoCall: true,\n        callOption: {\n          localMediaView: document.getElementById('local_video_element_id'),\n          remoteMediaView: document.getElementById('remote_video_element_id'),\n          audioEnabled: true,\n          videoEnabled: true,\n        },\n      };\n\n      SendBirdCall.dial(dialParams, (call, error) => {\n        if (error) {\n          console.log('error occured in call', error);\n          return;\n        }\n\n        console.log('success call process', call);\n        setIsCall(true);\n\n        // const time = setInterval(() => {\n        //   console.log(Math.floor(Number(call.getDuration() / 1000)) + '초');\n        // }, [1000]);\n\n        call.onEstablished = (call) => {\n          console.log('caller onEstablished', call);\n        };\n\n        call.onConnected = (call) => {\n          console.log('caller onConnected', call);\n        };\n\n        call.onEnded = (call) => {\n          console.log('caller onEnded', call);\n          // clearInterval(time);\n        };\n\n        call.onRemoteAudioSettingsChanged = (call) => {\n          console.log('caller onRemoteAudioSettingsChanged', call);\n        };\n\n        call.onRemoteVideoSettingsChanged = (call) => {\n          console.log('caller onRemoteVideoSettingsChanged', call);\n        };\n      });\n    }\n  }, [callee]);\n\n  // 전화 끊기\n  const end = useCallback(() => {\n    if (callee) {\n      const dialParams = {\n        userId: callee,\n        isVideoCall: true,\n        callOption: {\n          localMediaView: document.getElementById('local_video_element_id'),\n          remoteMediaView: document.getElementById('remote_video_element_id'),\n          audioEnabled: true,\n          videoEnabled: true,\n        },\n      };\n\n      SendBirdCall.dial(dialParams, (call, error) => {\n        if (error) {\n          console.log('error occured in call', error);\n        } else {\n          call.end();\n          setLoginDone(false);\n          setIsCall(false);\n          setCallee('');\n        }\n      });\n    }\n  }, [callee]);\n\n  // 전화 받기\n  const acceptCall = useCallback((call) => {\n    // const time = setInterval(() => {\n    //   console.log(Math.floor(Number(call.getDuration() / 1000)) + '초');\n    // }, [1000]);\n\n    call.onEstablished = (call) => {\n      console.log('callee onEstablished', call);\n    };\n\n    call.onConnected = (call) => {\n      console.log('callee onConnected', call);\n      setLocalCallee(call._caller.nickname);\n    };\n\n    call.onEnded = (call) => {\n      console.log('callee onEnded', call);\n      // clearInterval(time);\n    };\n\n    call.onRemoteAudioSettingsChanged = (call) => {\n      console.log('callee onRemoteAudioSettingsChanged', call);\n    };\n\n    call.onRemoteVideoSettingsChanged = (call) => {\n      console.log('callee onRemoteVideoSettingsChanged', call);\n    };\n\n    const acceptParams = {\n      callOption: {\n        localMediaView: document.getElementById('local_video_element_id'),\n        remoteMediaView: document.getElementById('remote_video_element_id'),\n        audioEnabled: true,\n        videoEnabled: true,\n      },\n    };\n\n    call.accept(acceptParams);\n  }, []);\n\n  useEffect(() => {\n    if (loginDone) {\n      SendBirdCall.addListener(callee, {\n        onRinging: (call) => {\n          console.log('@ onRinging call: ', call);\n          acceptCall(call);\n        },\n        // onAudioInputDeviceChanged: (call) => {\n        //   console.log('@ onAudioInputDeviceChanged call: ', call);\n        // },\n        // onAudioOutputDeviceChanged: (call) => {\n        //   console.log('@ onAudioOutputDeviceChanged call: ', call);\n        // },\n        // onVideoInputDeviceChanged: (call) => {\n        //   console.log('@ onVideoInputDeviceChanged call: ', call);\n        // },\n      });\n\n      return () => {\n        SendBirdCall.removeListener(callee, {\n          onRinging: (call) => {\n            acceptCall(call);\n          },\n        });\n      };\n    }\n  }, [loginDone, callee, acceptCall]);\n\n  return (\n    <div>\n      <h1>Custom direct call</h1>\n\n      {loginDone ? (\n        <>\n          <div\n            style={{\n              border: '1px solid black',\n              padding: '1%',\n              width: '30%',\n              margin: '0 auto',\n              textAlign: 'center',\n            }}\n          >\n            <div>\n              <input\n                style={{ width: '80%' }}\n                type=\"text\"\n                value={callee}\n                placeholder=\"전화할 상대방 id를 입력해주세요\"\n                onChange={(e) => setCallee(e.target.value)}\n              />\n            </div>\n            <div style={{ marginTop: '5%' }}>\n              {!isCall ? (\n                <button type=\"button\" onClick={() => call()}>\n                  call\n                </button>\n              ) : (\n                <button type=\"button\" onClick={() => end()}>\n                  disconnect call\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              marginTop: '5%',\n            }}\n          >\n            {/* caller */}\n            <div\n              style={{\n                width: '45%',\n                height: 'auto',\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <span>본인: {caller}</span>\n              <video\n                id=\"local_video_element_id\"\n                autoPlay\n                style={{ width: '100%' }}\n              ></video>\n            </div>\n            {/* callee */}\n            <div\n              style={{\n                width: '45%',\n                height: 'auto',\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <span>상대방: {callee || localCallee}</span>\n              <video\n                id=\"remote_video_element_id\"\n                autoPlay\n                style={{ width: '100%' }}\n              ></video>\n            </div>\n          </div>\n        </>\n      ) : (\n        <LoginForm\n          caller={caller}\n          setCaller={setCaller}\n          setLoginDone={setLoginDone}\n          SendBirdCall={SendBirdCall}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CustomDirectCall;\n","import styled from 'styled-components';\n\nexport const HeaderWrap = styled.ul`\n  padding-left: 0;\n  width: 100%;\n  display: flex;\n  list-style: none;\n\n  li {\n    margin-right: 1%;\n  }\n\n  a {\n    text-decoration: none;\n    color: #000;\n\n    :hover {\n      font-weight: bold;\n    }\n  }\n\n  @media screen and (max-width: 1500px) {\n    font-size: 1.4vw;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HeaderWrap } from './style';\n\nconst Header = () => {\n  return (\n    <HeaderWrap>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/quick_start\">quick start</Link>\n      </li>\n      <li>\n        <Link to=\"/create_channel\">create channel</Link>\n      </li>\n      <li>\n        <Link to=\"/channel_list\">channel list</Link>\n      </li>\n      <li>\n        <Link to=\"/channel_list_2\">channel list2</Link>\n      </li>\n      <li>\n        <Link to=\"/group_channel\">group channel</Link>\n      </li>\n      <li>\n        <Link to=\"/open_channel\">open channel</Link>\n      </li>\n      <li>\n        <Link to=\"/setting_channel\">setting channel</Link>\n      </li>\n      <li>\n        <Link to=\"/edit_profile\">edit profile</Link>\n      </li>\n      <li>\n        <Link to=\"/group_call\">group call</Link>\n      </li>\n      <li>\n        <Link to=\"/direct_call\">direct call</Link>\n      </li>\n      <li>\n        <Link to=\"/custom_chat_call\">custom chat call</Link>\n      </li>\n    </HeaderWrap>\n  );\n};\n\nexport default Header;\n","import Channel from '@sendbird/uikit-react/Channel';\nimport ChannelList from '@sendbird/uikit-react/ChannelList';\nimport SendbirdProvider from '@sendbird/uikit-react/SendbirdProvider';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport SendBirdCall from 'sendbird-calls';\n\nimport LoginForm from '../../components/LoginForm';\nimport { APP_ID } from '../../config/const';\n\n// Todo: login과 동시에 sendbird provider(chat), sendbird call 초기화\n\nconst CustomChatWithCall = () => {\n  // for call\n  const [caller, setCaller] = useState('');\n  //   const [callee, setCallee] = useState('');\n\n  const [loginDone, setLoginDone] = useState(false);\n  const [callDone, setCallDone] = useState(false);\n  //   const [isCall, setIsCall] = useState(false);\n\n  // for chat\n  const [selectedChannel, setSelectedChannel] = useState('');\n\n  const onChannelSelect = useCallback((res) => {\n    if (res) {\n      setSelectedChannel(res.url);\n    } else {\n      return;\n    }\n  }, []);\n\n  useEffect(() => {\n    if (loginDone && SendBirdCall) {\n      SendBirdCall.onRinging = (call) => {\n        const callView = SendBirdCall.getInstance();\n        callView.setCall(call);\n        callView.render();\n        callView.setRinging();\n\n        setCallDone(true);\n      };\n    }\n  }, [loginDone]);\n\n  useEffect(() => {\n    if (callDone) {\n      console.log('callDone');\n    }\n  }, [callDone]);\n\n  return (\n    <div>\n      <h1>Custom chat with call</h1>\n\n      {loginDone ? (\n        <div style={{ display: 'flex', height: '88vh', width: '100%' }}>\n          <SendbirdProvider appId={APP_ID} userId={caller} nickname={caller}>\n            <div className=\"channel_list_wrap\" style={{ flex: 1 }}>\n              <ChannelList onChannelSelect={onChannelSelect} />\n            </div>\n            <div className=\"channel_wrap\" style={{ flex: 3 }}>\n              <Channel channelUrl={selectedChannel || ''} />\n            </div>\n          </SendbirdProvider>\n        </div>\n      ) : (\n        <LoginForm\n          caller={caller}\n          setCaller={setCaller}\n          setLoginDone={setLoginDone}\n          SendBirdCall={SendBirdCall}\n          isChat={true}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CustomChatWithCall;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport QuickStart from './pages/QuickStart';\nimport CustomCreateChannel from './pages/CustomCreateChannel';\nimport CustomChannelList from './pages/CustomChannelList';\nimport CustomChannelList2 from './pages/CustomChannelList2';\nimport CustomGroupChannel from './pages/CustomGroupChannel';\nimport CustomSettingChannel from './pages/CustomSettingChannel';\nimport CustomEditProfile from './pages/CustomEditProfile';\nimport CustomOpenChannel from './pages/CustomOpenChannel';\nimport CustomCall from './pages/CustomCall';\nimport CustomDirectCall from './pages/CustomDirectCall';\n\nimport Header from './components/Header';\nimport CustomChatWithCall from './pages/CustomChatWithCall';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/quick_start\" element={<QuickStart />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/create_channel\" element={<CustomCreateChannel />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/channel_list\" element={<CustomChannelList />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/channel_list_2\" element={<CustomChannelList2 />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/group_channel\" element={<CustomGroupChannel />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/open_channel\" element={<CustomOpenChannel />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/setting_channel\" element={<CustomSettingChannel />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/edit_profile\" element={<CustomEditProfile />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/group_call\" element={<CustomCall />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/direct_call\" element={<CustomDirectCall />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/custom_chat_call\" element={<CustomChatWithCall />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}